== README

Running log app - Training log and race diary functionality will be added.

Models

User: name, email, passworddigestl
TrainingPlan: plan_date:datetime, plan_miles:double, plan_workout:string, plan_q:boolean
TrainingLog: log_date, log_miles, log_workout, log_calories, log_q:boolean, notes:text



Race: date race_name distance, time, position, 


view training log, view training plan, view stats, weekly, monthly, yearly. graphs?
enter plan, enter log, enter race

show upcoming races on training log.

******************************************************Next**************

  *redesign the input screen for the new model.
  *redesign the view so more obvious which part is the plan and which the log.

*Redesign the races functionality so radio boxes are used for the race distances when entering.


*Think about tests needed, write a few to complete here.


*think about layout of the pages, make partials where possible etc. 

*get Rspec working correctly

*may need to look at a table creating gem for this and get bootstrap going first?

*indicate race days on the table.

*Once table sorted rethink the routes and resources needed.

*Display stats on profile page, possibilities below:
  *Miles - Week, 4Week, Year to date, previous years, All time
  *Average miles per week, for the current year, previous year, current month
  *Pace - Average pace, weekly, monthly yearly.

*design weekly stats section on the log, list miles, calories and time per week.

*Add proposed and actual weekly miles to the plan/log table view.

*Work on races part so that default distances can be selected, but also new ones can be added.

*Add to races so records for main distances are displayed.

*Find a graphing gem for displaying stats.

*Import from csv?

*Need to think about set up periodisation phases so that can set phase I, II, III, IV etc. (May need to be able to change this for other periodisation methods/ philosophies)... 

*might be good if you can enter the dates of the race, and it calculate the phases for you according to the method in the book for < 24 week training cycles. Will need to be able to include or skip phase I training as necessary.

*Error messages when entering fields incorrectly.

*Deal with timezones properly when entering times.

*When time fixed add total time to weekly stats.

******************************************************Completed**********
*Edit and delete actions for training plans and training logs

*Make dates unique for training plans and logs

*Seperate notes into a seperate model so that they can be independent of logs and plans and have notes on days with no log/plan session.

*Fix unique indexes to handle multiple users.

*Fix validations to handle multiple users.

*Create actions for notes controller.

*Remove notes stuff from training log as now in notes model.

*Add workout time to log, add input and display fields.

*Get bootstrap going.

*Install FactoryGirl

*Make indexes or a view to show both plan and log together.

*Redesign models so that the plan log an notes are part of a single model, with a date as part of that.
  *redesign controllers and views to use the new model, remove the old code after the refactoring and get the new view to work.
*Create a proper header.

*Set days to be links to entry form.








